// <auto-generated />
using System;
using BeGreen.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeGreen.Migrations
{
    [DbContext(typeof(ContextBase))]
    [Migration("20211128125305_seguna")]
    partial class seguna
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("BeGreen.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoCadastro")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_Id_Login")
                        .IsUnique();

                    b.ToTable("Login");
                });

            modelBuilder.Entity("BeGreen.Models.Oferta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoParceiro")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CodigoParceiro");

                    b.HasIndex(new[] { "Id" }, "IX_Id_Oferta")
                        .IsUnique();

                    b.ToTable("Oferta");
                });

            modelBuilder.Entity("BeGreen.Models.Parceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cep")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cnpj")
                        .HasColumnType("TEXT");

                    b.Property<int>("CodigoLogin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Complemento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Logradouro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ramo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoCadastro")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CodigoLogin")
                        .IsUnique();

                    b.HasIndex(new[] { "Id" }, "IX_Id_Parceiro")
                        .IsUnique();

                    b.ToTable("Parceiro");
                });

            modelBuilder.Entity("BeGreen.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoLogin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int>("Genero")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoCadastro")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CodigoLogin")
                        .IsUnique();

                    b.HasIndex(new[] { "Id" }, "IX_Id_Usuario")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("BeGreen.Models.Oferta", b =>
                {
                    b.HasOne("BeGreen.Models.Parceiro", "Parceiro")
                        .WithMany("Ofertas")
                        .HasForeignKey("CodigoParceiro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parceiro");
                });

            modelBuilder.Entity("BeGreen.Models.Parceiro", b =>
                {
                    b.HasOne("BeGreen.Models.Login", "Login")
                        .WithOne("Parceiro")
                        .HasForeignKey("BeGreen.Models.Parceiro", "CodigoLogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Login");
                });

            modelBuilder.Entity("BeGreen.Models.Usuario", b =>
                {
                    b.HasOne("BeGreen.Models.Login", "Login")
                        .WithOne("Usuario")
                        .HasForeignKey("BeGreen.Models.Usuario", "CodigoLogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Login");
                });

            modelBuilder.Entity("BeGreen.Models.Login", b =>
                {
                    b.Navigation("Parceiro");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BeGreen.Models.Parceiro", b =>
                {
                    b.Navigation("Ofertas");
                });
#pragma warning restore 612, 618
        }
    }
}
